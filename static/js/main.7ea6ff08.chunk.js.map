{"version":3,"sources":["parser.js","faker.js","App.js","reportWebVitals.js","index.js"],"names":["setDataArr","setIsLoading","setCsvLoaded","style","color","href","onDrop","data","arr","map","obj","onError","err","file","inputElem","reason","console","log","addRemoveButton","onRemoveFile","skipEmptyLines","faker","require","unixDay","getRandomInt","max","Math","floor","random","sanitize","s","includes","replace","trim","str","isNaN","parseFloat","createProps","e","firedEvents","recallNum","parseInt","propsObject","slice","filter","el","properties","i","length","temp","split","undefined","tuple","randomValue","randomInt","push","splice","checkDependency","dependentOn","shouldDrop","dropoff","launcher","dataArr","userList","u_i","e_i","a","0","analytics","setCounter","counter","setUserCounter","setStatus","reset","setAnonymousId","anonymousId","timestamp","moment","unix","format","Object","assign","user_id","identify","track","setTimeout","App","useState","isLoading","csvLoaded","writeKey","setWriteKey","numOfUsers","setNumOfUsers","setUserList","userCounter","status","Analytics","integrationSettings","apiKey","retryQueue","addBundledMetadata","use","SegmentIntegration","initialize","lockUserList","users","id","firstName","name","lastName","datatype","uuid","generateUsers","className","type","placeholder","onChange","target","value","onClick","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAEe,cAA+C,IAA7CA,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAgBzC,OACE,qCACE,0DAA4B,mBAAGC,MAAO,CAACC,MAAM,SAAUC,KAAK,uGAAhC,oBAC5B,cAAC,IAAD,CACEC,OAnBe,SAACC,GACpBN,GAAa,GACbC,GAAa,GACb,IAAIM,EAAMD,EAAKE,KAAI,SAAAC,GAAG,OAAIA,EAAIH,QAC9BP,EAAWQ,IAgBPG,QAdgB,SAACC,EAAKC,EAAMC,EAAWC,GAC3CC,QAAQC,IAAIL,IAcRM,iBAAe,EACfC,aAbqB,SAACZ,GAC1BN,GAAa,GACbC,GAAa,GACbc,QAAQC,IAAIV,IAWRa,gBAAgB,EALlB,SAOE,gF,iBC5BFC,EAAQC,EAAQ,KCShBC,EAAU,MAUVC,EAAe,SAACC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,IAS9BI,EAAW,SAACC,GAChB,OAAIA,EAAEC,UAAS,OACXD,EAAEC,UAAS,KAKfD,GADAA,GADAA,GADAA,GADAA,EAAIA,EAAEE,QAAQ,IAAM,KACdA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbC,OAZY,iBADDC,EAcHJ,IAZNK,MAAMD,IACNC,MAAMC,WAAWF,IAYlBJ,EADkBM,WAAWN,KAdpB,IAACI,GAkBbG,EAAc,SAACC,EAAGC,GAEtB,IAAIC,EAAYC,SAASH,EA/BD,IAgCpBI,EAAcJ,EAAEK,MAjCJ,GAkChBD,EAAcA,EAAYE,QAAO,SAASC,GAAM,OAAOA,KAGvD,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,EAAIL,EAAYM,OAAQD,IAAK,CAC3C,IAAIE,EAAOP,EAAYK,GAAGG,MAAM,CAAC,MAEjC,GAAID,EAAK,GAAGlB,SAAS,MAASQ,EAAYC,QACAW,IAApCZ,EAAYC,GAAWS,EAAK,MAAmBH,EAAWG,EAAK,IAAMV,EAAYC,GAAWS,EAAK,UAIrG,GAFAA,EAAK,GAAKA,EAAK,GAAGC,MAAM,KAEpBD,EAAK,GAAGlB,SAAS,KAAM,CAEzB,IAAIqB,EAAQ,CACVvB,EAASoB,EAAK,GAAGC,MAAM,KAAK,IAC5BrB,EAASoB,EAAK,GAAGC,MAAM,KAAK,KAE1BG,EAAc,GAEdD,EAAM,GAAKH,EAAK,GAAGD,SAAQI,EAAM,GAAKH,EAAK,GAAGD,QAClD,IAAK,IAAID,EAAI,EAAGA,EAAIK,EAAM,GAAIL,IAAK,CACjC,IAAIO,EAAY9B,EAAayB,EAAK,GAAGD,QACrCK,EAAYE,KAAK1B,EAASoB,EAAK,GAAGK,KAClCL,EAAK,GAAGO,OAAOF,EAAU,GAE3BR,EAAWM,EAAM,IAAMC,MAClB,CAEL,IAAIA,EAAcxB,EAASoB,EAAK,GAAGzB,EAAayB,EAAK,GAAGD,UACxDF,EAAWG,EAAK,IAAMI,GAI5B,OAAOP,GAGHW,EAAkB,SAACC,GAAD,IAAcnB,EAAd,uDAA0B,GAA1B,OACrBmB,KAAenB,GAGZoB,EAAa,SAACC,GAAD,QAChBxB,WAAWwB,GAAYlC,KAAKC,MAAsB,IAAhBD,KAAKE,YAGpCiC,EAAQ,uCAAG,WACfC,EACAC,EACAC,EACAC,GAJe,6CAAAC,EAAA,yDAKf3B,EALe,+BAKH,CAAC4B,GAAE,GACflE,EANe,gCAOfmE,EAPe,uBAQfC,EARe,uBASfC,EATe,uBAUfC,EAVe,uBAWfC,EAXe,yBAcfvE,GAAa,GACTgE,EAAM,IACRG,EAAUK,QACVL,EAAUM,eAAeX,EAASC,GAAKW,eAGrChB,EAAWG,EAAQG,GAhGF,IA4EN,sBAsBRH,EAAQG,GAnGS,IAmGmBH,EAAQG,GAnG3B,GAmGqD,KAEzEH,EAAQG,GArGY,GAqGc,IAEhCR,EAAgBK,EAAQG,GAvGN,GAuG+B1B,IAzGtC,IAyGsD0B,EA1BxD,oBA4BPW,EAAYC,MAASC,OACrBhB,EAAQG,GAxGC,KAwGiBW,GAAwBd,EAAQG,GAxGjD,GAwGkE1C,GAC3EuC,EAAQG,GAxGO,KAwGiBW,GAAwBlD,KAAKC,MAAOD,KAAKE,SAAYQ,WAAW0B,EAAQG,GAxGzF,IAwGkH1C,IACrIqD,EAAYC,IAAOD,EAAW,KAAKG,SAEnCT,IAEwB,aAApBR,EAAQG,GAAK,GAnCN,wBAoCLnB,EAAaT,EAAYyB,EAAQG,GAAM1B,GAC3CyC,OAAOC,OAAOnC,EAAYiB,EAASC,WAC5BlB,EAAWoC,eACXpC,EAAW6B,YAClBpC,EAAYE,SAASqB,EAAQG,GAAK,KAAOnB,EAxChC,UAyCHsB,EAAUe,SAASpB,EAASC,GAAKkB,QAASpC,EAC9C,CAAC8B,UAAUA,IA1CJ,WA+Ca,UAApBd,EAAQG,GAAK,GA/CN,wBAgDLnB,EAAaT,EAAYyB,EAAQG,GAAM1B,GAC3CA,EAAYE,SAASqB,EAAQG,GAAK,KAAOnB,EAjDhC,UAkDHsB,EAAUgB,MAAMtB,EAAQG,GAAK,GAAInB,EAAY,CACjD6B,YAAaZ,EAASC,GAAKW,YAC3BC,UAAUA,IApDH,WA4DXZ,EAAI,KAAO,GAAGO,EAAeR,EAASf,OAASgB,IAG/CF,EAAQG,EAAI,GA/DD,iBAgETK,EAAQ,MAAQ,GAAGD,EAAWC,GAClCe,YAAW,kBAAIxB,EACbC,EACAC,EACAC,EACAC,EAAI,EACJ1B,EACAtC,EACAmE,EACAC,EACAC,EACAC,EACAC,KACG,IA7EQ,4BA8EJT,EAASC,EAAI,GA9ET,iBA+ETM,EAAQ,MAAQ,GAAGD,EAAWC,GAClCe,YAAW,kBAAIxB,EACbC,EACAC,EACAC,EAAI,EACJ,EACA,CAACG,GAAE,GACHlE,EACAmE,EACAC,EACAC,EACAC,EACAC,KACG,IA5FQ,+BA8FbH,EAAWC,GACXC,EAAeR,EAASf,OAAO,EAAGgB,GAClC/D,GAAa,GACbuE,EAAU,qBAjGG,kBAkGN,YAlGM,4CAAH,4DAuLCc,EAjFH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTzB,EADS,KACA9D,EADA,OAEkBuF,oBAAS,GAF3B,mBAETC,EAFS,KAEEvF,EAFF,OAGkBsF,oBAAS,GAH3B,mBAGTE,EAHS,KAGEvF,EAHF,OAIgBqF,mBAAS,IAJzB,mBAITG,EAJS,KAICC,EAJD,OAKcJ,mBAAS,GALvB,mBAKTjB,EALS,KAKAD,EALA,OAMoBkB,mBAAS,GAN7B,mBAMTK,EANS,KAMGC,EANH,OAOgBN,mBAAS,IAPzB,mBAOTxB,EAPS,KAOC+B,EAPD,OAQsBP,mBAAS,GAR/B,mBAQTQ,EARS,KAQIxB,EARJ,OASYgB,mBAAS,6BATrB,mBASTS,EATS,KASDxB,EATC,KAWVJ,EAAY,IAAI6B,IAChBC,EAAsB,CAC1B,aAAc,CACZC,OAAQT,EACRU,YAAY,EACZC,oBAAoB,IAGxBjC,EAAUkC,IAAIC,KACdnC,EAAUoC,WAAWN,GAErB,IAAMO,EAAe,SAACb,EAAYE,EAAatB,GAC7CA,EAAU,sBACVsB,EDrNyB,SAACF,GAE5B,IADA,IAAIc,EAAQ,GACHC,EAAG,EAAGA,GAAMf,EAAYe,IAAM,CAErC,IAAIC,EAAYvF,EAAMwF,KAAKD,YACvBE,EAAWzF,EAAMwF,KAAKC,WACtBnC,EAActD,EAAM0F,SAASC,OAC7B9B,EAAU7D,EAAM0F,SAASC,OAAO9D,MAAM,KAAK,GAE/CwD,EAAMnD,KAAK,CACP,WAAcqD,EACd,UAAaE,EACb,MAAQ,GAAR,OAAYF,EAAZ,YAAyBE,EAAzB,eACA,YAAenC,EACf,QAAWO,IAIjB,OAAOwB,ECmMOO,CAAcrB,KAI5B,OACE,qBAAKsB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,kDAAoB,mBAAG/G,MAAO,CAACC,MAAM,SAAUC,KAAK,kFAAhC,0BACtB,uBAAO6G,UAAU,WAAWC,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAAA/E,GAAC,OAAIqD,EAAYrD,EAAEgF,OAAOC,UACpG,uBAAOL,UAAU,WAAWC,KAAK,OAAOC,YAAY,+BAA+BC,SAAU,SAAA/E,GAAC,OAAIuD,EAAcvD,EAAEgF,OAAOC,UACxHxD,EAASf,OAAS,EACnB,mBAAG3C,KAAK,KAAKmH,QAAS,kBAAIf,EAAab,EAAYE,EAAatB,IAAY0C,UAAU,UAAtF,2BAA4GnD,EAASf,OAArH,gBAEA,mBAAG3C,KAAK,KAAKmH,QAAS,kBAAIf,EAAab,EAAYE,EAAatB,IAAY0C,UAAU,UAAtF,4BAEE,cAAC,EAAD,CACElH,WAAYA,EACZC,aAAcA,EACdC,aAAcA,KAEdsF,GAAczB,EAASf,OAAS,EAClC,mBAAG3C,KAAK,KACN6G,UAAU,oBACVM,QAAS,WACH/B,GAAW5B,EAASC,EACtBC,EACAA,EAASf,OAAO4C,EAChB,EACA,CAACzB,GAAE,GACHlE,EACAmE,EACAC,EACA,EACAE,EACAC,IAbN,SAkBGwB,IAGH,mBAAG3F,KAAK,KAAK6G,UAAU,UAAvB,SAAkClB,IAElC,6BAAK1B,IAtCP,gBAuCE,6BAAKyB,IAvCP,mBAwCE,wBACA,+BACE,oBAAG0B,IAAI,aAAapH,KAAK,uGAAuGiH,OAAO,SAAvI,cAvPM,IAuPN,iBAAyK,uBAAS,uBAClL,mBAAGG,IAAI,aAAapH,KAAK,gDAAgDiH,OAAO,SAAhF,6BC5PKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7ea6ff08.chunk.js","sourcesContent":["import { CSVReader } from 'react-papaparse';\n\nexport default ({setDataArr, setIsLoading, setCsvLoaded}) => {\n  const handleOnDrop = (data) => {\n    setIsLoading(false)\n    setCsvLoaded(true)\n    let arr = data.map(obj => obj.data)\n    setDataArr(arr)\n  };\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n  const handleOnRemoveFile = (data) => {\n    setIsLoading(false)\n    setCsvLoaded(false)\n    console.log(data);\n  };\n\n  return (\n    <>\n      <h5>2. Click or Drag Upload <a style={{color:\"white\"}} href=\"https://docs.google.com/spreadsheets/d/1jXUA_clzEbEX5xMLGGhFsJDgRau6RnpKYAlBbZYJy6I/edit?usp=sharing\">CSV</a></h5>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n        skipEmptyLines={false}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    </>\n  );\n  \n}","const faker = require('faker');\n\nexport const generateUsers = (numOfUsers) => {\n  let users = []\n  for (let id=1; id <= numOfUsers; id++) {\n\n    let firstName = faker.name.firstName();\n    let lastName = faker.name.lastName();\n    let anonymousId = faker.datatype.uuid();\n    let user_id = faker.datatype.uuid().split('-')[0]\n\n    users.push({\n        \"first_name\": firstName,\n        \"last_name\": lastName,\n        \"email\": `${firstName}.${lastName}@gmailx.com`,\n        \"anonymousId\": anonymousId,\n        \"user_id\": user_id\n    });\n  }\n\n  return users \n}","import React, { useState } from 'react'\nimport './App.css';\nimport Analytics from \"@segment/analytics.js-core/build/analytics\";\nimport SegmentIntegration from \"@segment/analytics.js-integration-segmentio\";\nimport CSVReader from './parser.js';\nimport moment from 'moment';\nimport { generateUsers } from './faker.js'\n\n// Constants - DO NOT CHANGE\nconst unixDay = 86400;\nconst firstEvent = 2;\nconst firstProp = 7;\nconst dependencyElement = 3;\nconst dropoffElement = 4;\nconst dayElement = 5;\nconst randomizeElement = 6;\nconst version = 1.1;\n\n// Helper functions\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\n\nconst isNumeric = (str) => {\n  if (typeof str != \"string\") return false \n  return !isNaN(str) && \n         !isNaN(parseFloat(str)) \n}\n\nconst sanitize = (s) => {\n  if (s.includes(false)) return false;\n  if (s.includes(true)) return true;\n  s = s.replace('\\\"', \"\");\n  s = s.replace(\"[\", \"\");\n  s = s.replace(\"]\", \"\");\n  s = s.replace('\"', \"\");\n  s = s.trim();\n  if (isNumeric(s)) return parseFloat(s);\n  return s\n}\n\nconst createProps = (e, firedEvents) => {\n  // remove non property/traits from array\n  let recallNum = parseInt(e[dependencyElement]);\n  let propsObject = e.slice(firstProp);\n  propsObject = propsObject.filter(function(el) { return el; });\n  const properties = {};\n  // create properties object, randomize array element selection per iteration, sanitize \n  for (let i = 0; i < propsObject.length; i++) {\n    let temp = propsObject[i].split([\":\"]);\n    // check for * recall\n    if (temp[1].includes(\"*\") && (firedEvents[recallNum])) {\n      if (firedEvents[recallNum][temp[0]] !== undefined) properties[temp[0]] = firedEvents[recallNum][temp[0]]\n    } else {\n      temp[1] = temp[1].split(',')\n      // if val[0] is array\n      if (temp[0].includes(\"[\")) {\n        // Create tuple from key [prop, 2]\n        let tuple = [\n          sanitize(temp[0].split(',')[0]),\n          sanitize(temp[0].split(',')[1])\n        ]\n        let randomValue = [];\n        // Push in random value i times, pop out element when chosen (block if too many)\n        if (tuple[1] > temp[1].length) tuple[1] = temp[1].length;\n        for (let i = 0; i < tuple[1]; i++) {\n          let randomInt = getRandomInt(temp[1].length)\n          randomValue.push(sanitize(temp[1][randomInt]));\n          temp[1].splice(randomInt,1);\n        }\n        properties[tuple[0]] = randomValue;\n      } else { \n        // randomly choose element in array\n        let randomValue = sanitize(temp[1][getRandomInt(temp[1].length)]);\n        properties[temp[0]] = randomValue;\n      }\n    }\n  }\n  return properties;\n}\n\nconst checkDependency = (dependentOn, firedEvents={}) => (\n  (dependentOn in firedEvents ? true : false)\n)\n\nconst shouldDrop = (dropoff) => (\n  (parseFloat(dropoff) < (Math.floor(Math.random() * 101))) ? false : true\n)\n\nconst launcher = async (\n  dataArr, // data schema\n  userList, \n  u_i, // index for user\n  e_i, // index for event\n  firedEvents={0:true}, // object of events fired\n  setIsLoading=false, \n  analytics, \n  setCounter, \n  counter, \n  setUserCounter, \n  setStatus\n  ) => {\n  // reset ajs on new user\n  setIsLoading(true);\n  if (e_i < 3) {\n    analytics.reset();\n    analytics.setAnonymousId(userList[u_i].anonymousId);\n  }\n  // Check for dropoff\n  if (shouldDrop(dataArr[e_i][dropoffElement])) {\n    // Check for dependency \n    if (!dataArr[e_i][dependencyElement] || (dataArr[e_i][dependencyElement] < 1)) {\n      // if no dependency exists, set dependency to 1\n      dataArr[e_i][dependencyElement] = 0\n    } \n    if (checkDependency(dataArr[e_i][dependencyElement], firedEvents) || e_i === firstEvent) {\n      // Handle time set time, index 6 is days_ago, index 7 is hours\n      let timestamp = moment().unix();\n      if (dataArr[e_i][dayElement]) timestamp = timestamp - dataArr[e_i][dayElement]*unixDay\n      if (dataArr[e_i][randomizeElement]) timestamp = timestamp - Math.floor((Math.random() * (parseFloat(dataArr[e_i][randomizeElement]))*unixDay));\n      timestamp = moment(timestamp, \"X\").format();\n\n      counter++;\n      // Identify\n      if (dataArr[e_i][1] === \"identify\") {\n        let properties = createProps(dataArr[e_i], firedEvents);\n        Object.assign(properties, userList[u_i]);\n        delete properties.user_id;\n        delete properties.anonymousId;\n        firedEvents[parseInt(dataArr[e_i][0])] = properties\n        await analytics.identify(userList[u_i].user_id, properties, \n          {timestamp:timestamp}\n        );\n      }\n\n      // Track\n      if (dataArr[e_i][1] === \"track\") {\n        let properties = createProps(dataArr[e_i], firedEvents);\n        firedEvents[parseInt(dataArr[e_i][0])] = properties\n        await analytics.track(dataArr[e_i][2], properties, {\n          anonymousId: userList[u_i].anonymousId,\n          timestamp:timestamp\n        });\n      }\n    }\n  }\n  \n  // set event and user counters\n  \n  if (u_i%10 === 0) setUserCounter(userList.length - u_i)\n\n  // next event\n  if (dataArr[e_i+1]) {    \n    if (counter%100 === 0) setCounter(counter);\n    setTimeout(()=>launcher(\n      dataArr, \n      userList, \n      u_i, \n      e_i+1,\n      firedEvents, \n      setIsLoading, \n      analytics, \n      setCounter, \n      counter, \n      setUserCounter, \n      setStatus\n      ), 10);\n  } else if (userList[u_i+1]) {\n    if (counter%100 === 0) setCounter(counter);\n    setTimeout(()=>launcher(\n      dataArr, \n      userList, \n      u_i+1, \n      1,\n      {0:true}, \n      setIsLoading, \n      analytics, \n      setCounter, \n      counter, \n      setUserCounter, \n      setStatus\n      ), 10);\n  } else {\n    setCounter(counter);\n    setUserCounter(userList.length-1- u_i)\n    setIsLoading(false);\n    setStatus(\"DONE, Fire Again?\")\n    return \"finished\";\n  }\n}\n\nconst App = () => {\n  const [dataArr, setDataArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [csvLoaded, setCsvLoaded] = useState(false);\n  const [writeKey, setWriteKey] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [numOfUsers, setNumOfUsers] = useState(1);\n  const [userList, setUserList] = useState([]);\n  const [userCounter, setUserCounter] = useState(0);\n  const [status, setStatus] = useState(\"NOT READY: GENERATE USERS\")\n\n  const analytics = new Analytics();\n  const integrationSettings = {\n    \"Segment.io\": {\n      apiKey: writeKey,\n      retryQueue: true,\n      addBundledMetadata: true\n    }\n  };\n  analytics.use(SegmentIntegration);\n  analytics.initialize(integrationSettings);\n\n  const lockUserList = (numOfUsers, setUserList, setStatus) => {\n    setStatus(\"3. ACTIVATE LASERS\")\n    setUserList(generateUsers(numOfUsers));\n    return\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h5>1. Enter Source <a style={{color:\"white\"}} href=\"https://segment.com/docs/getting-started/02-simple-install/#find-your-write-key\">Write Key</a></h5>\n      <input className=\"inputbox\" type=\"text\" placeholder=\"Write Key\" onChange={e => setWriteKey(e.target.value)} /> \n      <input className=\"inputbox\" type=\"text\" placeholder=\"Number of Users (0 to 10000)\" onChange={e => setNumOfUsers(e.target.value)} />\n      {userList.length > 0 ? \n      <a href=\"/#\" onClick={()=>lockUserList(numOfUsers, setUserList, setStatus)} className=\"button1\">{`DONE -> ${userList.length} Users Set`}</a>\n      : \n      <a href=\"/#\" onClick={()=>lockUserList(numOfUsers, setUserList, setStatus)} className=\"button1\">Generate Users</a>\n      }\n        <CSVReader \n          setDataArr={setDataArr}\n          setIsLoading={setIsLoading}\n          setCsvLoaded={setCsvLoaded}\n        />\n        {!isLoading && (userList.length > 0) ? \n        <a href=\"/#\"\n          className=\"highlight button1\" \n          onClick={()=>{\n            if (csvLoaded) launcher(dataArr, \n              userList, \n              userList.length-numOfUsers, \n              2, \n              {0:true}, \n              setIsLoading, \n              analytics, \n              setCounter, \n              0, \n              setUserCounter, \n              setStatus\n              )\n            }\n          } \n        >\n          {status}\n        </a> \n        :\n        <a href=\"/#\" className=\"button1\">{status}</a> \n        }  \n        <h4>{counter}</h4> Events Fired\n        <h4>{userCounter}</h4> Users Remaining\n        <div></div>\n        <h6>\n          <a rel=\"noreferrer\" href=\"https://docs.google.com/spreadsheets/d/13XXBkNGFTms5o-6A3A3vqmIoVBUqkxSgvj9ghTTYGdI/edit?usp=sharing\" target=\"_blank\">v{version} - Template</a><br></br><br></br>\n          <a rel=\"noreferrer\" href=\"https://github.com/send-on/new-demo-generator\" target=\"_blank\">README</a>\n        </h6>\n        \n      </header>     \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}