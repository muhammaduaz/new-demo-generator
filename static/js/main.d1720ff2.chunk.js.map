{"version":3,"sources":["parser.js","faker.js","App.js","reportWebVitals.js","index.js"],"names":["setDataArr","setIsLoading","setCsvLoaded","setStatus","style","color","href","className","onDrop","data","arr","map","obj","onError","err","file","inputElem","reason","console","log","addRemoveButton","onRemoveFile","skipEmptyLines","faker","require","generateRandomValue","int","value","datatype","uuid","split","unixDay","getRandomInt","max","Math","floor","random","sanitize","s","includes","replace","trim","str","isNaN","parseFloat","createProps","e","firedEvents","recallNum","parseInt","propsObject","slice","filter","el","properties","i","length","temp","undefined","tuple","randomValue","randomInt","push","splice","checkDependency","dependentOn","shouldDrop","dropoff","loadProps","dataArr","u_i","e_i","analytics","anonId","identify","page","track","anonymousId","setTimeout","launcher","userList","a","0","setCounter","counter","setUserCounter","reset","setAnonymousId","timestamp","moment","unix","format","Object","assign","user_id","App","useState","isLoading","csvLoaded","writeKey","setWriteKey","numOfUsers","setNumOfUsers","setUserList","userCounter","status","Analytics","integrationSettings","apiKey","retryQueue","addBundledMetadata","use","SegmentIntegration","initialize","lockUserList","users","id","firstName","name","lastName","generateUsers","type","placeholder","onChange","target","onClick","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAGe,cAA0D,IAAxDA,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAiBvD,OACE,qCACE,0DAA4B,mBAAGC,MAAO,CAACC,MAAM,SAAUC,KAAK,uGAAhC,oBAC5B,qBAAKC,UAAU,OAAOH,MAAO,CAAC,aAAgB,OAA9C,mHACA,cAAC,IAAD,CACEI,OArBe,SAACC,GACpBR,GAAa,GACbC,GAAa,GACb,IAAIQ,EAAMD,EAAKE,KAAI,SAAAC,GAAG,OAAIA,EAAIH,QAC9BT,EAAWU,GACXP,EAAU,gBAiBNU,QAfgB,SAACC,EAAKC,EAAMC,EAAWC,GAC3CC,QAAQC,IAAIL,IAeRM,iBAAe,EACfC,aAdqB,SAACZ,GAC1BR,GAAa,GACbC,GAAa,GACbgB,QAAQC,IAAIV,IAYRa,gBAAgB,EALlB,SAOE,gF,iBC/BFC,EAAQC,EAAQ,KAuBTC,EAAsB,SAACC,GAGlC,IAAIC,EAAQJ,EAAMK,SAASC,OAG3B,OAFY,IAARH,IAAWC,EAAQA,EAAMG,MAAM,KAAK,IAEjCH,GCpBHI,EAAU,MAUVC,EAAe,SAACC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,IAS9BI,EAAW,SAACC,GAChB,OAAIA,EAAEC,UAAS,OACXD,EAAEC,UAAS,KAKfD,GADAA,GADAA,GADAA,GADAA,EAAIA,EAAEE,QAAQ,IAAM,KACdA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbA,QAAQ,IAAK,KACbC,OAZY,iBADDC,EAcHJ,IAZNK,MAAMD,IACNC,MAAMC,WAAWF,IAYlBJ,EADkBM,WAAWN,KAdpB,IAACI,GAkBbG,EAAc,SAACC,EAAGC,GAEtB,IAAIC,EAAYC,SAASH,EA/BD,IAgCpBI,EAAcJ,EAAEK,MAjCJ,GAkChBD,EAAcA,EAAYE,QAAO,SAASC,GAAM,OAAOA,KAGvD,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,EAAIL,EAAYM,OAAQD,IAAK,CAC3C,IAAIE,EAAOP,EAAYK,GAAGzB,MAAM,CAAC,MAEjC,GAAI2B,EAAK,GAAGlB,SAAS,MAASQ,EAAYC,QACAU,IAApCX,EAAYC,GAAWS,EAAK,MAAmBH,EAAWG,EAAK,IAAMV,EAAYC,GAAWS,EAAK,UAChG,GAAIA,EAAK,GAAGlB,SAAS,MAC1Be,EAAWG,EAAK,IAAMhC,EAAoB,QACrC,GAAIgC,EAAK,GAAGlB,SAAU,KAC3Be,EAAWG,EAAK,IAAMhC,EAAoB,QAI1C,GAFAgC,EAAK,GAAKA,EAAK,GAAG3B,MAAM,KAEpB2B,EAAK,GAAGlB,SAAS,KAAM,CAEzB,IAAIoB,EAAQ,CACVtB,EAASoB,EAAK,GAAG3B,MAAM,KAAK,IAC5BO,EAASoB,EAAK,GAAG3B,MAAM,KAAK,KAE1B8B,EAAc,GAEdD,EAAM,GAAKF,EAAK,GAAGD,SAAQG,EAAM,GAAKF,EAAK,GAAGD,QAClD,IAAK,IAAID,EAAI,EAAGA,EAAII,EAAM,GAAIJ,IAAK,CACjC,IAAIM,EAAY7B,EAAayB,EAAK,GAAGD,QACrCI,EAAYE,KAAKzB,EAASoB,EAAK,GAAGI,KAClCJ,EAAK,GAAGM,OAAOF,EAAU,GAE3BP,EAAWK,EAAM,IAAMC,MAClB,CAEL,IAAIA,EAAcvB,EAASoB,EAAK,GAAGzB,EAAayB,EAAK,GAAGD,UACxDF,EAAWG,EAAK,IAAMG,GAI5B,OAAON,GAGHU,EAAkB,SAACC,GAAD,IAAclB,EAAd,uDAA0B,GAA1B,OACrBkB,KAAelB,GAGZmB,EAAa,SAACC,GAAD,QAChBvB,WAAWuB,GAAYjC,KAAKC,MAAsB,IAAhBD,KAAKE,YAGpCgC,EAAY,SAAZA,EAAaC,EAASC,EAAKC,EAAKxB,EAAayB,EAAWvE,EAAcE,EAAWsE,GAErF,GAAwB,aAApBJ,EAAQE,GAAK,GAAmB,CAClC,IAAIjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3CA,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EACzCkB,EAAUE,SAASD,EAAQnB,GAE7B,GAAwB,SAApBe,EAAQE,GAAK,GAAe,CAC9B,IAAIjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3CA,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EACzCkB,EAAUG,KAAKN,EAAQE,GAAK,GAAIjB,GAGlC,GAAwB,UAApBe,EAAQE,GAAK,GAAgB,CAC/B,IAAIjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3CA,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EACzCkB,EAAUI,MAAMP,EAAQE,GAAK,GAAIjB,EAAY,CAC3CuB,YAAaJ,IAIbJ,EAAQE,EAAI,GACdO,YAAW,kBAAIV,EACbC,EACAC,EACAC,EAAI,EACJxB,EACAyB,EACAvE,EACAE,EACAsE,KACC,IACMH,EAAM,GACfQ,YAAW,kBAAIV,EACbC,EACAC,EAAI,EACJ,EACAvB,EACAyB,EACAvE,EACAE,EACAsE,KACC,KAEHxE,GAAa,GACbE,EAAU,uBAIR4E,EAAQ,uCAAG,WACfV,EACAW,EACAV,EACAC,GAJe,iDAAAU,EAAA,yDAKflC,EALe,+BAKH,CAACmC,GAAE,GACfjF,EANe,gCAOfuE,EAPe,uBAQfW,EARe,uBASfC,EATe,uBAUfC,EAVe,wBAWflF,EAXe,0BAcL,cACVF,GAAa,GACTsE,EAAM,IACRC,EAAUc,QACVd,EAAUe,eAAeP,EAASV,GAAKO,eAGrCX,EAAWG,EAAQE,GAtJF,IAiIN,sBAuBRF,EAAQE,GAzJS,IAyJmBF,EAAQE,GAzJ3B,GAyJqD,KAEzEF,EAAQE,GA3JY,GA2Jc,IAEhCP,EAAgBK,EAAQE,GA7JN,GA6J+BxB,IA/JtC,IA+JsDwB,EA3BxD,oBA6BPiB,EAAYC,MAASC,OACrBrB,EAAQE,GA9JC,KA8JiBiB,GAAwBnB,EAAQE,GA9JjD,GA8JkExC,GAC3EsC,EAAQE,GA9JO,KA8JiBiB,GAAwBtD,KAAKC,MAAOD,KAAKE,SAAYQ,WAAWyB,EAAQE,GA9JzF,IA8JkHxC,IACrIyD,EAAYC,IAAOD,EAAW,KAAKG,SAEnCP,IAEwB,aAApBf,EAAQE,GAAK,GApCN,wBAqCLjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3C6C,OAAOC,OAAOvC,EAAY0B,EAASV,WAC5BhB,EAAWwC,eACXxC,EAAWuB,YAClB9B,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EAzChC,UA0CHkB,EAAUE,SAASM,EAASV,GAAKwB,QAASxC,EAC9C,CAACkC,UAAUA,IA3CJ,WA+Ca,SAApBnB,EAAQE,GAAK,GA/CN,wBAgDLjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3C6C,OAAOC,OAAOvC,EAAY0B,EAASV,WAC5BhB,EAAWwC,eACXxC,EAAWuB,YAClB9B,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EApDhC,UAqDHkB,EAAUG,KAAKN,EAAQE,GAAK,GAAIjB,EACpC,CACEuB,YAAaG,EAASV,GAAKO,YAC3BW,UAAUA,IAxDL,WA8Da,UAApBnB,EAAQE,GAAK,GA9DN,wBA+DLjB,EAAaT,EAAYwB,EAAQE,GAAMxB,GAC3CA,EAAYE,SAASoB,EAAQE,GAAK,KAAOjB,EAhEhC,UAiEHkB,EAAUI,MAAMP,EAAQE,GAAK,GAAIjB,EAAY,CACjDuB,YAAaG,EAASV,GAAKO,YAC3BW,UAAUA,IAnEH,WA0EXlB,EAAI,KAAO,GAAGe,EAAeL,EAASxB,OAASc,IAG/CD,EAAQE,EAAI,GA7ED,iBA8ETa,EAAQ,MAAQ,GAAGD,EAAWC,GAClCN,YAAW,kBAAIC,EACbV,EACAW,EACAV,EACAC,EAAI,EACJxB,EACA9C,EACAuE,EACAW,EACAC,EACAC,EACAlF,KACG,IA3FQ,4BA4FJ6E,EAASV,EAAI,GA5FT,iBA6FTc,EAAQ,MAAQ,GAAGD,EAAWC,GAClCN,YAAW,kBAAIC,EACbV,EACAW,EACAV,EAAI,EACJ,EACA,CAACY,GAAE,GACHjF,EACAuE,EACAW,EACAC,EACAC,EACAlF,KACG,IA1GQ,+BA4GbgF,EAAWC,GACXC,EAAeL,EAASxB,OAAO,EAAGc,GAClCnE,EAAU,oBACNsE,EAAShD,EAAoB,GACjC2C,EAAUC,EAAS,EAAG,EAAG,CAACa,GAAE,GAAOV,EAAWvE,EAAcE,EAAWsE,GAhH1D,kBAiHN,YAjHM,4CAAH,4DA8MCsB,EAzFH,WACV,MAA8BC,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgBrE,EAAhB,KACA,EAAkCgG,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBhG,EAAlB,KACA,EAAkC+F,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBhG,EAAlB,KACA,EAAgC8F,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBD,EAAhB,KACA,EAAoCa,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBuB,EAAjB,KACA,EAAsCP,mBAAS,GAA/C,mBAAOQ,EAAP,KAAoBnB,EAApB,KACA,EAA4BW,mBAAS,yCAArC,mBAAOS,EAAP,KAAetG,EAAf,KAEMqE,EAAY,IAAIkC,IAChBC,EAAsB,CAC1B,aAAc,CACZC,OAAQT,EACRU,YAAY,EACZC,oBAAoB,IAGxBtC,EAAUuC,IAAIC,KACdxC,EAAUyC,WAAWN,GAErB,IAAMO,EAAe,SAACb,EAAYE,EAAapG,GAC7CoG,EDxRyB,SAACF,GAE5B,IADA,IAAIc,EAAQ,GACHC,EAAG,EAAGA,GAAMf,EAAYe,IAAM,CAErC,IAAIC,EAAY9F,EAAM+F,KAAKD,YACvBE,EAAWhG,EAAM+F,KAAKC,WACtB1C,EAActD,EAAMK,SAASC,OAC7BiE,EAAUvE,EAAMK,SAASC,OAAOC,MAAM,KAAK,GAE/CqF,EAAMrD,KAAK,CACP,WAAcuD,EACd,UAAaE,EACb,MAAQ,GAAR,OAAYF,EAAZ,YAAyBE,EAAzB,eACA,YAAe1C,EACf,QAAWiB,IAIjB,OAAOqB,ECsQOK,CAAcnB,KAI5B,OACE,qBAAK9F,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qEAEF,uBAAOA,UAAU,WAAWkH,KAAK,OAAOC,YAAY,sCAAsCC,SAAU,SAAA7E,GAAC,OAAIwD,EAAcxD,EAAE8E,OAAOjG,UAG/HqD,EAASxB,OAAS,EACnB,mBAAGlD,KAAK,KAAKuH,QAAS,kBAAIX,EAAab,EAAYE,IAAyBhG,UAAU,UAAtF,2BAA4GyE,EAASxB,OAArH,qCAEA,mBAAGlD,KAAK,KAAKuH,QAAS,kBAAIX,EAAab,EAAYE,IAAyBhG,UAAU,UAAtF,4BAEA,qBAAKA,UAAU,OAAf,+KAEA,kDAAoB,mBAAGH,MAAO,CAACC,MAAM,SAAUC,KAAK,kFAAhC,0BACpB,uBAAOC,UAAU,WAAWkH,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAAA7E,GAAC,OAAIsD,EAAYtD,EAAE8E,OAAOjG,UAClG,cAAC,EAAD,CACE3B,WAAYA,EACZC,aAAcA,EACdC,aAAcA,EACdC,UAAWA,IAGb,iDACE8F,GAAcjB,EAASxB,OAAS,EAClC,mBAAGlD,KAAK,KACNC,UAAU,oBACVsH,QAAS,WACH3B,GAAWnB,EAASV,EACtBW,EACAA,EAASxB,OAAO6C,EAChB,EACA,CAACnB,GAAE,GACHjF,EACAuE,EACAW,EACA,EACAE,EACAlF,IAbN,SAkBGsG,IAGH,mBAAGnG,KAAK,KAAKC,UAAU,UAAvB,SAAkCkG,IAElC,6BAAKrB,IA/CP,gBAgDE,6BAAKoB,IAhDP,mBAiDE,wBACA,+BACE,oBAAGsB,IAAI,aAAaxH,KAAK,uGAAuGsH,OAAO,SAAvI,cAnUM,KAmUN,iBAAyK,uBAAS,uBAClL,mBAAGE,IAAI,aAAaxH,KAAK,gDAAgDsH,OAAO,SAAhF,6BCxUKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d1720ff2.chunk.js","sourcesContent":["import { CSVReader } from 'react-papaparse';\nimport './App.css';\n\nexport default ({setDataArr, setIsLoading, setCsvLoaded, setStatus}) => {\n  const handleOnDrop = (data) => {\n    setIsLoading(false)\n    setCsvLoaded(true)\n    let arr = data.map(obj => obj.data)\n    setDataArr(arr)\n    setStatus(\"FIRE EVENTS\")\n  };\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n  const handleOnRemoveFile = (data) => {\n    setIsLoading(false)\n    setCsvLoaded(false)\n    console.log(data);\n  };\n\n  return (\n    <>\n      <h5>3. Click or Drag Upload <a style={{color:\"white\"}} href=\"https://docs.google.com/spreadsheets/d/1jXUA_clzEbEX5xMLGGhFsJDgRau6RnpKYAlBbZYJy6I/edit?usp=sharing\">CSV</a></h5>\n      <div className=\"note\" style={{\"marginBottom\": \"2em\"}}>(HINT - you can drag the file directly from the downloads bar at the bottom of Chrome after download)</div>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n        skipEmptyLines={false}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    </>\n  );\n  \n}","const faker = require('faker');\n\nexport const generateUsers = (numOfUsers) => {\n  let users = []\n  for (let id=1; id <= numOfUsers; id++) {\n\n    let firstName = faker.name.firstName();\n    let lastName = faker.name.lastName();\n    let anonymousId = faker.datatype.uuid();\n    let user_id = faker.datatype.uuid().split('-')[0]\n\n    users.push({\n        \"first_name\": firstName,\n        \"last_name\": lastName,\n        \"email\": `${firstName}.${lastName}@gmailx.com`,\n        \"anonymousId\": anonymousId,\n        \"user_id\": user_id\n    });\n  }\n\n  return users \n}\n\nexport const generateRandomValue = (int) => {\n  // 0 = #, short form. \n  // 1 = ##, long form. \n  let value = faker.datatype.uuid();\n  if (int === 0) value = value.split(\"-\")[0]\n\n  return value\n}","import React, { useState } from 'react'\nimport './App.css';\nimport Analytics from \"@segment/analytics.js-core/build/analytics\";\nimport SegmentIntegration from \"@segment/analytics.js-integration-segmentio\";\nimport CSVReader from './parser.js';\nimport moment from 'moment';\nimport { generateUsers, generateRandomValue } from './faker.js'\n\n// Constants - DO NOT CHANGE\nconst unixDay = 86400;\nconst firstEvent = 2;\nconst firstProp = 7;\nconst dependencyElement = 3;\nconst dropoffElement = 4;\nconst dayElement = 5;\nconst randomizeElement = 6;\nconst version = 1.32;\n\n// Helper functions\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n}\n\nconst isNumeric = (str) => {\n  if (typeof str != \"string\") return false \n  return !isNaN(str) && \n         !isNaN(parseFloat(str)) \n}\n\nconst sanitize = (s) => {\n  if (s.includes(false)) return false;\n  if (s.includes(true)) return true;\n  s = s.replace('\\\"', \"\");\n  s = s.replace(\"[\", \"\");\n  s = s.replace(\"]\", \"\");\n  s = s.replace('\"', \"\");\n  s = s.trim();\n  if (isNumeric(s)) return parseFloat(s);\n  return s\n}\n\nconst createProps = (e, firedEvents) => {\n  // remove non property/traits from array\n  let recallNum = parseInt(e[dependencyElement]);\n  let propsObject = e.slice(firstProp);\n  propsObject = propsObject.filter(function(el) { return el; });\n  const properties = {};\n  // create properties object, randomize array element selection per iteration, sanitize \n  for (let i = 0; i < propsObject.length; i++) {\n    let temp = propsObject[i].split([\":\"]);\n    // check for * recall\n    if (temp[1].includes(\"*\") && (firedEvents[recallNum])) {\n      if (firedEvents[recallNum][temp[0]] !== undefined) properties[temp[0]] = firedEvents[recallNum][temp[0]]\n    } else if (temp[1].includes('##')) {\n      properties[temp[0]] = generateRandomValue(1);\n    } else if (temp[1].includes ('#')) {\n      properties[temp[0]] = generateRandomValue(0);\n    } else {\n      temp[1] = temp[1].split(',')\n      // if val[0] is array\n      if (temp[0].includes(\"[\")) {\n        // Create tuple from key [prop, 2]\n        let tuple = [\n          sanitize(temp[0].split(',')[0]),\n          sanitize(temp[0].split(',')[1])\n        ]\n        let randomValue = [];\n        // Push in random value i times, pop out element when chosen (block if too many)\n        if (tuple[1] > temp[1].length) tuple[1] = temp[1].length;\n        for (let i = 0; i < tuple[1]; i++) {\n          let randomInt = getRandomInt(temp[1].length)\n          randomValue.push(sanitize(temp[1][randomInt]));\n          temp[1].splice(randomInt,1);\n        }\n        properties[tuple[0]] = randomValue;\n      } else { \n        // randomly choose element in array\n        let randomValue = sanitize(temp[1][getRandomInt(temp[1].length)]);\n        properties[temp[0]] = randomValue;\n      }\n    }\n  }\n  return properties;\n}\n\nconst checkDependency = (dependentOn, firedEvents={}) => (\n  (dependentOn in firedEvents ? true : false)\n)\n\nconst shouldDrop = (dropoff) => (\n  (parseFloat(dropoff) < (Math.floor(Math.random() * 101))) ? false : true\n)\n\nconst loadProps = (dataArr, u_i, e_i, firedEvents, analytics, setIsLoading, setStatus, anonId) => {\n  \n  if (dataArr[e_i][1] === \"identify\") {\n    let properties = createProps(dataArr[e_i], firedEvents);\n    firedEvents[parseInt(dataArr[e_i][0])] = properties\n    analytics.identify(anonId, properties);\n  }\n  if (dataArr[e_i][1] === \"page\") {\n    let properties = createProps(dataArr[e_i], firedEvents);\n    firedEvents[parseInt(dataArr[e_i][0])] = properties\n    analytics.page(dataArr[e_i][2], properties);\n  }\n\n  if (dataArr[e_i][1] === \"track\") {\n    let properties = createProps(dataArr[e_i], firedEvents);\n    firedEvents[parseInt(dataArr[e_i][0])] = properties\n    analytics.track(dataArr[e_i][2], properties, {\n      anonymousId: anonId,\n    });\n  } \n  // next event\n  if (dataArr[e_i+1]) {\n    setTimeout(()=>loadProps(\n      dataArr,\n      u_i,\n      e_i+1,\n      firedEvents,\n      analytics, \n      setIsLoading,\n      setStatus, \n      anonId\n    ), 10)\n  } else if (u_i < 10) {\n    setTimeout(()=>loadProps(\n      dataArr,\n      u_i+1,\n      1,\n      firedEvents,\n      analytics, \n      setIsLoading,\n      setStatus, \n      anonId\n    ), 10)\n  } else {\n    setIsLoading(false);\n    setStatus(\"DONE, Fire Again?\");\n  }\n}\n\nconst launcher = async (\n  dataArr, // data schema\n  userList, \n  u_i, // index for user\n  e_i, // index for event\n  firedEvents={0:true}, // object of events fired\n  setIsLoading=false, \n  analytics, \n  setCounter, \n  counter, \n  setUserCounter, \n  setStatus\n  ) => {\n  // reset ajs on new user\n  setStatus(\"Working...\")\n  setIsLoading(true);\n  if (e_i < 3) {\n    analytics.reset();\n    analytics.setAnonymousId(userList[u_i].anonymousId);\n  }\n  // Check for dropoff\n  if (shouldDrop(dataArr[e_i][dropoffElement])) {\n    // Check for dependency \n    if (!dataArr[e_i][dependencyElement] || (dataArr[e_i][dependencyElement] < 1)) {\n      // if no dependency exists, set dependency to 1\n      dataArr[e_i][dependencyElement] = 0\n    } \n    if (checkDependency(dataArr[e_i][dependencyElement], firedEvents) || e_i === firstEvent) {\n      // Handle time set time, index 6 is days_ago, index 7 is hours\n      let timestamp = moment().unix();\n      if (dataArr[e_i][dayElement]) timestamp = timestamp - dataArr[e_i][dayElement]*unixDay\n      if (dataArr[e_i][randomizeElement]) timestamp = timestamp - Math.floor((Math.random() * (parseFloat(dataArr[e_i][randomizeElement]))*unixDay));\n      timestamp = moment(timestamp, \"X\").format();\n\n      counter++;\n      // Identify\n      if (dataArr[e_i][1] === \"identify\") {\n        let properties = createProps(dataArr[e_i], firedEvents);\n        Object.assign(properties, userList[u_i]);\n        delete properties.user_id;\n        delete properties.anonymousId;\n        firedEvents[parseInt(dataArr[e_i][0])] = properties\n        await analytics.identify(userList[u_i].user_id, properties, \n          {timestamp:timestamp}\n        );\n      }\n\n      if (dataArr[e_i][1] === \"page\") {\n        let properties = createProps(dataArr[e_i], firedEvents);\n        Object.assign(properties, userList[u_i]);\n        delete properties.user_id;\n        delete properties.anonymousId;\n        firedEvents[parseInt(dataArr[e_i][0])] = properties\n        await analytics.page(dataArr[e_i][2], properties, \n          {\n            anonymousId: userList[u_i].anonymousId,\n            timestamp:timestamp\n          }\n        );\n      }\n\n      // Track\n      if (dataArr[e_i][1] === \"track\") {\n        let properties = createProps(dataArr[e_i], firedEvents);\n        firedEvents[parseInt(dataArr[e_i][0])] = properties\n        await analytics.track(dataArr[e_i][2], properties, {\n          anonymousId: userList[u_i].anonymousId,\n          timestamp:timestamp\n        });\n      }\n    }\n  }\n  \n  // set event and user counters\n  if (u_i%10 === 0) setUserCounter(userList.length - u_i)\n\n  // next event\n  if (dataArr[e_i+1]) {    \n    if (counter%100 === 0) setCounter(counter);\n    setTimeout(()=>launcher(\n      dataArr, \n      userList, \n      u_i, \n      e_i+1,\n      firedEvents, \n      setIsLoading, \n      analytics, \n      setCounter, \n      counter, \n      setUserCounter, \n      setStatus\n      ), 10);\n  } else if (userList[u_i+1]) {\n    if (counter%100 === 0) setCounter(counter);\n    setTimeout(()=>launcher(\n      dataArr, \n      userList, \n      u_i+1, \n      1,\n      {0:true}, \n      setIsLoading, \n      analytics, \n      setCounter, \n      counter, \n      setUserCounter, \n      setStatus\n      ), 10);\n  } else {\n    setCounter(counter);\n    setUserCounter(userList.length-1- u_i)\n    setStatus(\"Finishing Up ...\")\n    let anonId = generateRandomValue(1); \n    loadProps(dataArr, 0, 2, {0:true}, analytics, setIsLoading, setStatus, anonId);\n    return \"finished\";\n  }\n}\n\nconst App = () => {\n  const [dataArr, setDataArr] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [csvLoaded, setCsvLoaded] = useState(false);\n  const [writeKey, setWriteKey] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [numOfUsers, setNumOfUsers] = useState(1);\n  const [userList, setUserList] = useState([]);\n  const [userCounter, setUserCounter] = useState(0);\n  const [status, setStatus] = useState(\"NOT READY: GENERATE USERS OR LOAD CSV\")\n\n  const analytics = new Analytics();\n  const integrationSettings = {\n    \"Segment.io\": {\n      apiKey: writeKey,\n      retryQueue: true,\n      addBundledMetadata: true\n    }\n  };\n  analytics.use(SegmentIntegration);\n  analytics.initialize(integrationSettings);\n\n  const lockUserList = (numOfUsers, setUserList, setStatus) => {\n    setUserList(generateUsers(numOfUsers));\n    return\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h5>1. Enter How many Users to Generate</h5>\n      \n      <input className=\"inputbox\" type=\"text\" placeholder=\"Number of Users (Recommended < 500)\" onChange={e => setNumOfUsers(e.target.value)} />\n\n      \n      {userList.length > 0 ? \n      <a href=\"/#\" onClick={()=>lockUserList(numOfUsers, setUserList, setStatus)} className=\"button1\">{`DONE -> ${userList.length} Users Set, Click to Regenerate`}</a>\n      : \n      <a href=\"/#\" onClick={()=>lockUserList(numOfUsers, setUserList, setStatus)} className=\"button1\">Generate Users</a>\n      }\n      <div className=\"note\">Note: Each time you click will generate a new set of users. To re-use the same user set for multiple sources or data sets, do not repeat this step moving forward</div>\n\n      <h5>2. Enter Source <a style={{color:\"white\"}} href=\"https://segment.com/docs/getting-started/02-simple-install/#find-your-write-key\">Write Key</a></h5>\n      <input className=\"inputbox\" type=\"text\" placeholder=\"Write Key\" onChange={e => setWriteKey(e.target.value)} /> \n        <CSVReader \n          setDataArr={setDataArr}\n          setIsLoading={setIsLoading}\n          setCsvLoaded={setCsvLoaded}\n          setStatus={setStatus}\n        />\n\n        <h5>4. Fire Events</h5>\n        {!isLoading && (userList.length > 0) ? \n        <a href=\"#!\"\n          className=\"highlight button1\" \n          onClick={()=>{\n            if (csvLoaded) launcher(dataArr, \n              userList, \n              userList.length-numOfUsers, \n              2, \n              {0:true}, \n              setIsLoading, \n              analytics, \n              setCounter, \n              0, \n              setUserCounter, \n              setStatus\n              )\n            }\n          } \n        >\n          {status}\n        </a> \n        :\n        <a href=\"#!\" className=\"button1\">{status}</a> \n        }  \n        <h4>{counter}</h4> Events Fired\n        <h4>{userCounter}</h4> Users Remaining\n        <div></div>\n        <h6>\n          <a rel=\"noreferrer\" href=\"https://docs.google.com/spreadsheets/d/13XXBkNGFTms5o-6A3A3vqmIoVBUqkxSgvj9ghTTYGdI/edit?usp=sharing\" target=\"_blank\">v{version} - Template</a><br></br><br></br>\n          <a rel=\"noreferrer\" href=\"https://github.com/send-on/new-demo-generator\" target=\"_blank\">README</a>\n        </h6>\n        \n      </header>     \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}